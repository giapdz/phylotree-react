{"ast":null,"code":"var _jsxFileName = \"D:\\\\app test\\\\phylotree-react\\\\src\\\\lib\\\\components\\\\branch.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { line } from \"d3-shape\";\nimport React from \"react\";\nimport \"./styles/phylotree.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Branch(props) {\n  const {\n    xScale,\n    yScale,\n    colorScale,\n    showLabel,\n    setTooltip,\n    showAttribute,\n    tree,\n    setIsOpen,\n    showValue1,\n    showValue2,\n    showValue3,\n    showValue4,\n    showValue5,\n    round1,\n    round2,\n    round3,\n    round4,\n    round5\n  } = props,\n        {\n    source,\n    target\n  } = props.link,\n        source_x = xScale(source.data.abstract_x),\n        source_y = yScale(source.data.abstract_y),\n        target_x = xScale(target.data.abstract_x),\n        target_y = yScale(target.data.abstract_y),\n        tracer_x2 = props.alignTips === \"right\" ? props.width - (target.data.text_width || 0) : target_x,\n        round_1 = parseFloat(round1),\n        round_2 = parseFloat(round2),\n        round_3 = parseFloat(round3),\n        round_4 = parseFloat(round4),\n        round_5 = parseFloat(round5),\n        data = [[source_x, source_y], [source_x, target_y], [target_x, target_y]],\n        data1 = [[target_x + 18, target_y + 10], [target_x - 2, target_y], [target_x + 18, target_y - 10]],\n        branch_line = line().x(d => d[0]).y(d => d[1]),\n        computed_branch_styles = props.branchStyler ? props.branchStyler(target.data) : target.data.annotation && colorScale ? {\n    stroke: colorScale(target.data.annotation)\n  } : {},\n        all_branch_styles = Object.assign({}, props.branchStyle, computed_branch_styles),\n        label_style = target.data.name && props.labelStyler ? props.labelStyler(target.data) : {};\n  if (target.hidden === true && target.collapsed === false && target.parent.hidden === true) return null;else if (target.hidden === true && target.collapsed === false && target.data.attribute !== \"0\") {\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      class: \"internal-node\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        className: \"rp-branch\",\n        fill: \"none\",\n        d: branch_line(data),\n        ...all_branch_styles,\n        onMouseMove: props.tooltip ? e => {\n          setTooltip({\n            x: e.nativeEvent.offsetX,\n            y: e.nativeEvent.offsetY,\n            data: target.data\n          });\n        } : undefined,\n        onMouseOut: props.tooltip ? e => {\n          setTooltip(false);\n        } : undefined,\n        onClick: e => {\n          setIsOpen({\n            left: e.nativeEvent.offsetX + 50,\n            top: e.nativeEvent.offsetY + 80,\n            position: \"absolute\",\n            display: \"block\",\n            node: target,\n            nodeC: target\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: data1,\n        fill: \"grey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), \" \", showAttribute ? /*#__PURE__*/_jsxDEV(\"text\", {\n        x: source_x + (target_x - source_x) / 2 - 20,\n        y: target_y - 8,\n        textAnchor: \"start\",\n        alignmentBaseline: \"middle\",\n        className: \"rp-label\",\n        children: [parseFloat(target.data.attribute).toFixed(4), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this) : null, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  } else if (target.hidden === true && target.collapsed === false && target.data.attribute === \"0\") {\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      class: \"internal-node\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        className: \"rp-branch\",\n        fill: \"none\",\n        d: branch_line(data),\n        ...all_branch_styles,\n        onMouseMove: props.tooltip ? e => {\n          setTooltip({\n            x: e.nativeEvent.offsetX,\n            y: e.nativeEvent.offsetY,\n            data: target.data\n          });\n        } : undefined,\n        onMouseOut: props.tooltip ? e => {\n          setTooltip(false);\n        } : undefined,\n        onClick: e => {\n          setIsOpen({\n            left: e.nativeEvent.offsetX + 50,\n            top: e.nativeEvent.offsetY + 80,\n            position: \"absolute\",\n            display: \"block\",\n            nodeC: target\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: data1,\n        fill: \"grey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), \" \", showAttribute ? /*#__PURE__*/_jsxDEV(\"text\", {\n        x: source_x + (target_x - source_x) / 2 - 20,\n        y: target_y - 8,\n        textAnchor: \"start\",\n        alignmentBaseline: \"middle\",\n        className: \"rp-label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this) : null, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  } else if (target.hidden === true) return null;else {\n    if (tree.isLeafNode(target)) {\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"node\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          className: \"rp-branch\",\n          fill: \"none\",\n          d: branch_line(data),\n          ...all_branch_styles,\n          onMouseMove: props.tooltip ? e => {\n            setTooltip({\n              x: e.nativeEvent.offsetX,\n              y: e.nativeEvent.offsetY,\n              data: target.data\n            });\n          } : undefined,\n          onMouseOut: props.tooltip ? e => {\n            setTooltip(false);\n          } : undefined,\n          onClick: props.isOpen ? e => {\n            setIsOpen({\n              left: e.nativeEvent.offsetX + 120,\n              top: e.nativeEvent.offsetY + 120,\n              position: \"absolute\",\n              display: \"block\",\n              node: target\n            });\n          } : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), \" \", showAttribute ? /*#__PURE__*/_jsxDEV(\"text\", {\n          x: source_x + (target_x - source_x) / 2 - 20,\n          y: target_y - 8,\n          textAnchor: \"start\",\n          alignmentBaseline: \"middle\",\n          className: \"rp-label\",\n          children: [parseFloat(target.data.attribute).toFixed(4), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this) : null, showLabel ? /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: target_x,\n          x2: tracer_x2,\n          y1: target_y,\n          y2: target_y,\n          className: \"rp-branch-tracer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this) : null, showLabel ? /*#__PURE__*/_jsxDEV(\"text\", {\n          x: tracer_x2 + 5,\n          y: target_y,\n          textAnchor: \"start\",\n          alignmentBaseline: \"middle\",\n          ...Object.assign({}, props.labelStyle, label_style),\n          className: \"rp-label\",\n          children: [target.data.name.split(\"/\")[0].slice(0, props.maxLabelWidth), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this) : null, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        class: \"internal-node\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          className: \"rp-branch\",\n          fill: \"none\",\n          d: branch_line(data),\n          ...all_branch_styles,\n          onMouseMove: props.tooltip ? e => {\n            setTooltip({\n              x: e.nativeEvent.offsetX,\n              y: e.nativeEvent.offsetY,\n              data: target.data\n            });\n          } : undefined,\n          onMouseOut: props.tooltip ? e => {\n            setTooltip(false);\n          } : undefined,\n          onClick: e => {\n            setIsOpen({\n              left: e.nativeEvent.offsetX + 50,\n              top: e.nativeEvent.offsetY + 80,\n              position: \"absolute\",\n              display: \"block\",\n              node: target.data.attribute === \"0\" ? null : target,\n              nodeC: target\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), \" \", showAttribute ? /*#__PURE__*/_jsxDEV(\"text\", {\n          x: source_x + (target_x - source_x) / 2 - 20,\n          y: target_y - 8,\n          textAnchor: \"start\",\n          alignmentBaseline: \"middle\",\n          className: \"rp-label\",\n          children: [target.data.attribute !== \"0\" ? parseFloat(target.data.attribute).toFixed(4) : null, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this) : null, (() => {\n          if (target.data.name.includes(\"__reroot_top_clade\")) {\n            return null;\n          } else {\n            if (target.data.name.split(\"/\")[0] === \"\" && target.data.name.split(\"/\")[1] !== \"\") {\n              return null;\n            }\n\n            if (!showValue5 && !showValue2 && !showValue3 && !showValue4 && showValue1) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 13,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (!showValue5 && !showValue1 && !showValue3 && !showValue4 && showValue2) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 13,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (!showValue1 && !showValue2 && !showValue4 && !showValue5 && showValue3) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 10,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (!showValue1 && !showValue2 && !showValue3 && !showValue5 && showValue4) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 10,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (!showValue1 && !showValue2 && !showValue3 && !showValue4 && showValue5) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 8,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue2 && !(showValue3 || showValue4 || showValue5)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 28,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue3 && !(showValue2 || showValue4 || showValue5)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 28,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue4 && !(showValue2 || showValue3 || showValue5)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 28,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue5 && !(showValue3 || showValue4 || showValue2)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 28,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue2 && showValue3 && !(showValue1 || showValue4 || showValue5)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 28,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue2 && showValue4 && !(showValue3 || showValue1 || showValue5)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 28,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue2 && showValue5 && !(showValue3 || showValue4 || showValue1)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 28,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue3 && showValue4 && !(showValue1 || showValue2 || showValue5)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 20,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue3 && showValue5 && !(showValue1 || showValue2 || showValue4)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 20,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue4 && showValue5 && !(showValue1 || showValue2 || showValue3)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 20,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue2 && showValue3 && !(showValue4 || showValue5)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 38,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue2 && showValue4 && !(showValue3 || showValue5)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 38,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue2 && showValue5 && !(showValue3 || showValue4)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 38,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue3 && showValue4 && !(showValue2 || showValue5)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 30,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue3 && showValue5 && !(showValue2 || showValue4)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 34,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue4 && showValue5 && !(showValue2 || showValue3)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 38,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue2 && showValue3 && showValue4 && !(showValue1 || showValue5)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 30,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue2 && showValue3 && showValue5 && !(showValue1 || showValue4)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 34,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1047,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue2 && showValue4 && showValue5 && !(showValue1 || showValue3)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 30,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue3 && showValue4 && showValue5 && !(showValue1 || showValue2)) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 30,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue2 && showValue3 && showValue4 && !showValue5) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 42,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1162,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue2 && showValue3 && showValue5 && !showValue4) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 42,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1207,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue2 && showValue4 && showValue5 && !showValue3) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 42,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1252,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue3 && showValue4 && showValue5 && !showValue2) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 42,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1297,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue2 && showValue3 && showValue4 && showValue5 && !showValue1) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 42,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1342,\n                columnNumber: 37\n              }, this);\n            }\n\n            if (showValue1 && showValue2 && showValue3 && showValue4 && showValue5) {\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: source_x + (target_x - source_x) / 2 - 48,\n                y: target_y + 10,\n                textAnchor: \"start\",\n                alignmentBaseline: \"middle\",\n                className: \"rp-label\",\n                children: [round_1 === -1 ? target.data.name.split(\"/\")[0] : parseFloat(target.data.name.split(\"/\")[0]).toFixed(round_1), \"/\", \" \", round_2 === -1 ? target.data.name.split(\"/\")[1] : parseFloat(target.data.name.split(\"/\")[1]).toFixed(round_2), \"/\", \" \", round_3 === -1 ? target.data.name.split(\"/\")[2] : parseFloat(target.data.name.split(\"/\")[2]).toFixed(round_3), \"/\", \" \", round_4 === -1 ? target.data.name.split(\"/\")[3] : parseFloat(target.data.name.split(\"/\")[3]).toFixed(round_4), \"/\", \" \", round_5 === -1 ? target.data.name.split(\"/\")[4] : parseFloat(target.data.name.split(\"/\")[4]).toFixed(round_5), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1387,\n                columnNumber: 37\n              }, this);\n            } else return null;\n          }\n        })(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\n\n_c = Branch;\nBranch.defaultProps = {\n  branchStyle: {\n    strokeWidth: 2,\n    stroke: \"grey\"\n  },\n  labelStyle: {}\n};\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["D:/app test/phylotree-react/src/lib/components/branch.jsx"],"names":["line","React","Branch","props","xScale","yScale","colorScale","showLabel","setTooltip","showAttribute","tree","setIsOpen","showValue1","showValue2","showValue3","showValue4","showValue5","round1","round2","round3","round4","round5","source","target","link","source_x","data","abstract_x","source_y","abstract_y","target_x","target_y","tracer_x2","alignTips","width","text_width","round_1","parseFloat","round_2","round_3","round_4","round_5","data1","branch_line","x","d","y","computed_branch_styles","branchStyler","annotation","stroke","all_branch_styles","Object","assign","branchStyle","label_style","name","labelStyler","hidden","collapsed","parent","attribute","tooltip","e","nativeEvent","offsetX","offsetY","undefined","left","top","position","display","node","nodeC","toFixed","isLeafNode","isOpen","labelStyle","split","slice","maxLabelWidth","includes","defaultProps","strokeWidth"],"mappings":"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","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { line } from \"d3-shape\";\r\nimport React from \"react\";\r\nimport \"./styles/phylotree.css\";\r\n\r\nfunction Branch(props) {\r\n    const {\r\n            xScale,\r\n            yScale,\r\n            colorScale,\r\n            showLabel,\r\n            setTooltip,\r\n            showAttribute,\r\n            tree,\r\n            setIsOpen,\r\n            showValue1,\r\n            showValue2,\r\n            showValue3,\r\n            showValue4,\r\n            showValue5,\r\n            round1,\r\n            round2,\r\n            round3,\r\n            round4,\r\n            round5,\r\n        } = props,\r\n        { source, target } = props.link,\r\n        source_x = xScale(source.data.abstract_x),\r\n        source_y = yScale(source.data.abstract_y),\r\n        target_x = xScale(target.data.abstract_x),\r\n        target_y = yScale(target.data.abstract_y),\r\n        tracer_x2 =\r\n            props.alignTips === \"right\"\r\n                ? props.width - (target.data.text_width || 0)\r\n                : target_x,\r\n        round_1 = parseFloat(round1),\r\n        round_2 = parseFloat(round2),\r\n        round_3 = parseFloat(round3),\r\n        round_4 = parseFloat(round4),\r\n        round_5 = parseFloat(round5),\r\n        data = [\r\n            [source_x, source_y],\r\n            [source_x, target_y],\r\n            [target_x, target_y],\r\n        ],\r\n        data1 = [\r\n            [target_x + 18, target_y + 10],\r\n            [target_x - 2, target_y],\r\n            [target_x + 18, target_y - 10],\r\n        ],\r\n        branch_line = line()\r\n            .x((d) => d[0])\r\n            .y((d) => d[1]),\r\n        computed_branch_styles = props.branchStyler\r\n            ? props.branchStyler(target.data)\r\n            : target.data.annotation && colorScale\r\n            ? {\r\n                  stroke: colorScale(target.data.annotation),\r\n              }\r\n            : {},\r\n        all_branch_styles = Object.assign(\r\n            {},\r\n            props.branchStyle,\r\n            computed_branch_styles\r\n        ),\r\n        label_style =\r\n            target.data.name && props.labelStyler\r\n                ? props.labelStyler(target.data)\r\n                : {};\r\n    if (\r\n        target.hidden === true &&\r\n        target.collapsed === false &&\r\n        target.parent.hidden === true\r\n    )\r\n        return null;\r\n    else if (\r\n        target.hidden === true &&\r\n        target.collapsed === false &&\r\n        target.data.attribute !== \"0\"\r\n    ) {\r\n        return (\r\n            <g class=\"internal-node\">\r\n                <path\r\n                    className=\"rp-branch\"\r\n                    fill=\"none\"\r\n                    d={branch_line(data)}\r\n                    {...all_branch_styles}\r\n                    onMouseMove={\r\n                        props.tooltip\r\n                            ? (e) => {\r\n                                  setTooltip({\r\n                                      x: e.nativeEvent.offsetX,\r\n                                      y: e.nativeEvent.offsetY,\r\n                                      data: target.data,\r\n                                  });\r\n                              }\r\n                            : undefined\r\n                    }\r\n                    onMouseOut={\r\n                        props.tooltip\r\n                            ? (e) => {\r\n                                  setTooltip(false);\r\n                              }\r\n                            : undefined\r\n                    }\r\n                    onClick={(e) => {\r\n                        setIsOpen({\r\n                            left: e.nativeEvent.offsetX + 50,\r\n                            top: e.nativeEvent.offsetY + 80,\r\n                            position: \"absolute\",\r\n                            display: \"block\",\r\n                            node: target,\r\n                            nodeC: target,\r\n                        });\r\n                    }}\r\n                />\r\n                <polygon points={data1} fill=\"grey\" />{\" \"}\r\n                {showAttribute ? (\r\n                    <text\r\n                        x={source_x + (target_x - source_x) / 2 - 20}\r\n                        y={target_y - 8}\r\n                        textAnchor=\"start\"\r\n                        alignmentBaseline=\"middle\"\r\n                        className=\"rp-label\"\r\n                    >\r\n                        {parseFloat(target.data.attribute).toFixed(4)}{\" \"}\r\n                    </text>\r\n                ) : null}{\" \"}\r\n            </g>\r\n        );\r\n    } else if (\r\n        target.hidden === true &&\r\n        target.collapsed === false &&\r\n        target.data.attribute === \"0\"\r\n    ) {\r\n        return (\r\n            <g class=\"internal-node\">\r\n                <path\r\n                    className=\"rp-branch\"\r\n                    fill=\"none\"\r\n                    d={branch_line(data)}\r\n                    {...all_branch_styles}\r\n                    onMouseMove={\r\n                        props.tooltip\r\n                            ? (e) => {\r\n                                  setTooltip({\r\n                                      x: e.nativeEvent.offsetX,\r\n                                      y: e.nativeEvent.offsetY,\r\n                                      data: target.data,\r\n                                  });\r\n                              }\r\n                            : undefined\r\n                    }\r\n                    onMouseOut={\r\n                        props.tooltip\r\n                            ? (e) => {\r\n                                  setTooltip(false);\r\n                              }\r\n                            : undefined\r\n                    }\r\n                    onClick={(e) => {\r\n                        setIsOpen({\r\n                            left: e.nativeEvent.offsetX + 50,\r\n                            top: e.nativeEvent.offsetY + 80,\r\n                            position: \"absolute\",\r\n                            display: \"block\",\r\n                            nodeC: target,\r\n                        });\r\n                    }}\r\n                />\r\n                <polygon points={data1} fill=\"grey\" />{\" \"}\r\n                {showAttribute ? (\r\n                    <text\r\n                        x={source_x + (target_x - source_x) / 2 - 20}\r\n                        y={target_y - 8}\r\n                        textAnchor=\"start\"\r\n                        alignmentBaseline=\"middle\"\r\n                        className=\"rp-label\"\r\n                    ></text>\r\n                ) : null}{\" \"}\r\n            </g>\r\n        );\r\n    } else if (target.hidden === true) return null;\r\n    else {\r\n        if (tree.isLeafNode(target)) {\r\n            return (\r\n                <g className=\"node\">\r\n                    <path\r\n                        className=\"rp-branch\"\r\n                        fill=\"none\"\r\n                        d={branch_line(data)}\r\n                        {...all_branch_styles}\r\n                        onMouseMove={\r\n                            props.tooltip\r\n                                ? (e) => {\r\n                                      setTooltip({\r\n                                          x: e.nativeEvent.offsetX,\r\n                                          y: e.nativeEvent.offsetY,\r\n                                          data: target.data,\r\n                                      });\r\n                                  }\r\n                                : undefined\r\n                        }\r\n                        onMouseOut={\r\n                            props.tooltip\r\n                                ? (e) => {\r\n                                      setTooltip(false);\r\n                                  }\r\n                                : undefined\r\n                        }\r\n                        onClick={\r\n                            props.isOpen\r\n                                ? (e) => {\r\n                                      setIsOpen({\r\n                                          left: e.nativeEvent.offsetX + 120,\r\n                                          top: e.nativeEvent.offsetY + 120,\r\n                                          position: \"absolute\",\r\n                                          display: \"block\",\r\n                                          node: target,\r\n                                      });\r\n                                  }\r\n                                : undefined\r\n                        }\r\n                    />{\" \"}\r\n                    {showAttribute ? (\r\n                        <text\r\n                            x={source_x + (target_x - source_x) / 2 - 20}\r\n                            y={target_y - 8}\r\n                            textAnchor=\"start\"\r\n                            alignmentBaseline=\"middle\"\r\n                            className=\"rp-label\"\r\n                        >\r\n                            {parseFloat(target.data.attribute).toFixed(4)}{\" \"}\r\n                        </text>\r\n                    ) : null}\r\n                    {showLabel ? (\r\n                        <line\r\n                            x1={target_x}\r\n                            x2={tracer_x2}\r\n                            y1={target_y}\r\n                            y2={target_y}\r\n                            className=\"rp-branch-tracer\"\r\n                        />\r\n                    ) : null}\r\n                    {showLabel ? (\r\n                        <text\r\n                            x={tracer_x2 + 5}\r\n                            y={target_y}\r\n                            textAnchor=\"start\"\r\n                            alignmentBaseline=\"middle\"\r\n                            {...Object.assign(\r\n                                {},\r\n                                props.labelStyle,\r\n                                label_style\r\n                            )}\r\n                            className=\"rp-label\"\r\n                        >\r\n                            {target.data.name\r\n                                .split(\"/\")[0]\r\n                                .slice(0, props.maxLabelWidth)}{\" \"}\r\n                        </text>\r\n                    ) : null}{\" \"}\r\n                </g>\r\n            );\r\n        } else {\r\n            return (\r\n                <g class=\"internal-node\">\r\n                    <path\r\n                        className=\"rp-branch\"\r\n                        fill=\"none\"\r\n                        d={branch_line(data)}\r\n                        {...all_branch_styles}\r\n                        onMouseMove={\r\n                            props.tooltip\r\n                                ? (e) => {\r\n                                      setTooltip({\r\n                                          x: e.nativeEvent.offsetX,\r\n                                          y: e.nativeEvent.offsetY,\r\n                                          data: target.data,\r\n                                      });\r\n                                  }\r\n                                : undefined\r\n                        }\r\n                        onMouseOut={\r\n                            props.tooltip\r\n                                ? (e) => {\r\n                                      setTooltip(false);\r\n                                  }\r\n                                : undefined\r\n                        }\r\n                        onClick={(e) => {\r\n                            setIsOpen({\r\n                                left: e.nativeEvent.offsetX + 50,\r\n                                top: e.nativeEvent.offsetY + 80,\r\n                                position: \"absolute\",\r\n                                display: \"block\",\r\n                                node:\r\n                                    target.data.attribute === \"0\"\r\n                                        ? null\r\n                                        : target,\r\n                                nodeC: target,\r\n                            });\r\n                        }}\r\n                    />{\" \"}\r\n                    {showAttribute ? (\r\n                        <text\r\n                            x={source_x + (target_x - source_x) / 2 - 20}\r\n                            y={target_y - 8}\r\n                            textAnchor=\"start\"\r\n                            alignmentBaseline=\"middle\"\r\n                            className=\"rp-label\"\r\n                        >\r\n                            {target.data.attribute !== \"0\"\r\n                                ? parseFloat(target.data.attribute).toFixed(4)\r\n                                : null}{\" \"}\r\n                        </text>\r\n                    ) : null}\r\n                    {(() => {\r\n                        if (target.data.name.includes(\"__reroot_top_clade\")) {\r\n                            return null;\r\n                        } else {\r\n                            if (\r\n                                target.data.name.split(\"/\")[0] === \"\" &&\r\n                                target.data.name.split(\"/\")[1] !== \"\"\r\n                            ) {\r\n                                return null;\r\n                            }\r\n                            if (\r\n                                !showValue5 &&\r\n                                !showValue2 &&\r\n                                !showValue3 &&\r\n                                !showValue4 &&\r\n                                showValue1\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            13\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                !showValue5 &&\r\n                                !showValue1 &&\r\n                                !showValue3 &&\r\n                                !showValue4 &&\r\n                                showValue2\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            13\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n\r\n                            if (\r\n                                !showValue1 &&\r\n                                !showValue2 &&\r\n                                !showValue4 &&\r\n                                !showValue5 &&\r\n                                showValue3\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            10\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                !showValue1 &&\r\n                                !showValue2 &&\r\n                                !showValue3 &&\r\n                                !showValue5 &&\r\n                                showValue4\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            10\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                !showValue1 &&\r\n                                !showValue2 &&\r\n                                !showValue3 &&\r\n                                !showValue4 &&\r\n                                showValue5\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            8\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue2 &&\r\n                                !(showValue3 || showValue4 || showValue5)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            28\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue3 &&\r\n                                !(showValue2 || showValue4 || showValue5)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            28\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue4 &&\r\n                                !(showValue2 || showValue3 || showValue5)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            28\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue5 &&\r\n                                !(showValue3 || showValue4 || showValue2)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            28\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue2 &&\r\n                                showValue3 &&\r\n                                !(showValue1 || showValue4 || showValue5)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            28\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue2 &&\r\n                                showValue4 &&\r\n                                !(showValue3 || showValue1 || showValue5)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            28\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue2 &&\r\n                                showValue5 &&\r\n                                !(showValue3 || showValue4 || showValue1)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            28\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue3 &&\r\n                                showValue4 &&\r\n                                !(showValue1 || showValue2 || showValue5)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            20\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue3 &&\r\n                                showValue5 &&\r\n                                !(showValue1 || showValue2 || showValue4)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            20\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue4 &&\r\n                                showValue5 &&\r\n                                !(showValue1 || showValue2 || showValue3)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            20\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue2 &&\r\n                                showValue3 &&\r\n                                !(showValue4 || showValue5)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            38\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue2 &&\r\n                                showValue4 &&\r\n                                !(showValue3 || showValue5)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            38\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue2 &&\r\n                                showValue5 &&\r\n                                !(showValue3 || showValue4)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            38\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue3 &&\r\n                                showValue4 &&\r\n                                !(showValue2 || showValue5)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            30\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue3 &&\r\n                                showValue5 &&\r\n                                !(showValue2 || showValue4)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            34\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue4 &&\r\n                                showValue5 &&\r\n                                !(showValue2 || showValue3)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            38\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue2 &&\r\n                                showValue3 &&\r\n                                showValue4 &&\r\n                                !(showValue1 || showValue5)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            30\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue2 &&\r\n                                showValue3 &&\r\n                                showValue5 &&\r\n                                !(showValue1 || showValue4)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            34\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue2 &&\r\n                                showValue4 &&\r\n                                showValue5 &&\r\n                                !(showValue1 || showValue3)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            30\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue3 &&\r\n                                showValue4 &&\r\n                                showValue5 &&\r\n                                !(showValue1 || showValue2)\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            30\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue2 &&\r\n                                showValue3 &&\r\n                                showValue4 &&\r\n                                !showValue5\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            42\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue2 &&\r\n                                showValue3 &&\r\n                                showValue5 &&\r\n                                !showValue4\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            42\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue2 &&\r\n                                showValue4 &&\r\n                                showValue5 &&\r\n                                !showValue3\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            42\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue3 &&\r\n                                showValue4 &&\r\n                                showValue5 &&\r\n                                !showValue2\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            42\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue2 &&\r\n                                showValue3 &&\r\n                                showValue4 &&\r\n                                showValue5 &&\r\n                                !showValue1\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            42\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            }\r\n                            if (\r\n                                showValue1 &&\r\n                                showValue2 &&\r\n                                showValue3 &&\r\n                                showValue4 &&\r\n                                showValue5\r\n                            ) {\r\n                                return (\r\n                                    <text\r\n                                        x={\r\n                                            source_x +\r\n                                            (target_x - source_x) / 2 -\r\n                                            48\r\n                                        }\r\n                                        y={target_y + 10}\r\n                                        textAnchor=\"start\"\r\n                                        alignmentBaseline=\"middle\"\r\n                                        className=\"rp-label\"\r\n                                    >\r\n                                        {round_1 === -1\r\n                                            ? target.data.name.split(\"/\")[0]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[0]\r\n                                              ).toFixed(round_1)}\r\n                                        /{\" \"}\r\n                                        {round_2 === -1\r\n                                            ? target.data.name.split(\"/\")[1]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[1]\r\n                                              ).toFixed(round_2)}\r\n                                        /{\" \"}\r\n                                        {round_3 === -1\r\n                                            ? target.data.name.split(\"/\")[2]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[2]\r\n                                              ).toFixed(round_3)}\r\n                                        /{\" \"}\r\n                                        {round_4 === -1\r\n                                            ? target.data.name.split(\"/\")[3]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[3]\r\n                                              ).toFixed(round_4)}\r\n                                        /{\" \"}\r\n                                        {round_5 === -1\r\n                                            ? target.data.name.split(\"/\")[4]\r\n                                            : parseFloat(\r\n                                                  target.data.name.split(\"/\")[4]\r\n                                              ).toFixed(round_5)}{\" \"}\r\n                                    </text>\r\n                                );\r\n                            } else return null;\r\n                        }\r\n                    })()}{\" \"}\r\n                </g>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nBranch.defaultProps = {\r\n    branchStyle: {\r\n        strokeWidth: 2,\r\n        stroke: \"grey\",\r\n    },\r\n    labelStyle: {},\r\n};\r\n\r\nexport default Branch;\r\n"]},"metadata":{},"sourceType":"module"}