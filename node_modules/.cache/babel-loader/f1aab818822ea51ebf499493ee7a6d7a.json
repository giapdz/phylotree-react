{"ast":null,"code":"var _jsxFileName = \"D:\\\\app test\\\\phylotree-react\\\\src\\\\lib\\\\components\\\\PhylotreeApplication.jsx\";\nimport { faAlignLeft, faAlignRight, faArrowDown, faArrowLeft, faArrowRight, faArrowUp, faImage, faRedo, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Phylotree from \"./phylotree\";\nimport showLength from \"./styles/icon_length.png\";\nimport \"./styles/phylotree.css\";\nimport showLabel from \"./styles/show_label.png\";\nimport TooltipContainer from \"./tooltip_container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst saveSvgAsPng = require('save-svg-as-png');\n\nconst imageOptions = {\n  scale: 5,\n  encoderOptions: 1,\n  backgroundColor: 'white'\n};\n\nfunction Reload(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Reload tree\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faRedo,\n      size: \"lg\",\n      style: {\n        width: 15\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Reload;\n\nfunction HorizontalExpansionButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Expand horizontally\",\n    variant: \"secondary\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      style: {\n        width: 10\n      }\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowRight,\n      style: {\n        width: 10\n      }\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = HorizontalExpansionButton;\n\nfunction HorizontalCompressionButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Compress horizontally\",\n    variant: \"secondary\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowRight,\n      style: {\n        width: 10\n      }\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      style: {\n        width: 10\n      }\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = HorizontalCompressionButton;\n\nfunction VerticalExpansionButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    style: {\n      fontSize: 12,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    title: \"Expand vertically\",\n    variant: \"secondary\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowUp\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowDown\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = VerticalExpansionButton;\n\nfunction VerticalCompressionButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    style: {\n      fontSize: 12,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    title: \"Compress vertically\",\n    variant: \"secondary\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowDown\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowUp\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_c5 = VerticalCompressionButton;\n\nfunction AscendingSortButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Sort in ascending order\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSortAmountUp,\n      flip: \"vertical\"\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_c6 = AscendingSortButton;\n\nfunction DescendingSortButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Sort in descending order\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSortAmountUp\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_c7 = DescendingSortButton;\n\nfunction AlignTipsRightButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Align tips to right\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAlignRight\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_c8 = AlignTipsRightButton;\n\nfunction AlignTipsLeftButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Align tips to left\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAlignLeft\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n\n_c9 = AlignTipsLeftButton;\n\nfunction DownloadImagetButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Save image\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faImage,\n      flip: \"vertical\"\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n}\n\n_c10 = DownloadImagetButton;\n\nfunction TooltipContents(props) {\n  return /*#__PURE__*/_jsxDEV(TooltipContainer, {\n    tooltip_width: 10,\n    tooltip_height: 50,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: 0,\n      y: 0,\n      width: 180,\n      height: 20,\n      fill: \"bisque\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: 90,\n      y: 15,\n      fill: \"cadetblue\",\n      textAnchor: \"middle\",\n      children: [\"Length: \", props.data.attribute, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n}\n\n_c11 = TooltipContents;\n\nclass PhylotreeApplication extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.toggleDimension = (dimension, direction) => {\n      const new_dimension = this.state[dimension] + (direction === \"expand\" ? 100 : -100),\n            new_state = {};\n      new_state[dimension] = new_dimension;\n      this.setState(new_state);\n    };\n\n    this.handleSort = direction => {\n      this.setState({\n        sort: direction\n      });\n    };\n\n    this.alignTips = direction => {\n      this.setState({\n        alignTips: direction\n      });\n    };\n\n    this.myChangeHandler = event => {\n      this.setState({\n        nodeName: event.target.value\n      });\n    };\n\n    this.labelStyler = branch => {\n      var rx = new RegExp(this.state.nodeName, \"i\");\n      const identifier = branch.name.search(rx);\n\n      if (this.state.nodeName !== '') {\n        const fill = identifier !== -1 ? 'red' : 'black';\n        return {\n          fill\n        };\n      }\n    };\n\n    this.handleClick = () => {\n      saveSvgAsPng.saveSvgAsPng(document.getElementById('svg-chart'), 'shapes.png', imageOptions);\n    };\n\n    this.openDropdown = props => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dropdown-menu\",\n        role: \"menu\",\n        style: { ...props\n        },\n        children: [props.nodeC ? /*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"dropdown-item\",\n          tabindex: \"-1\",\n          onClick: () => {\n            this.toggleCollapse(props.nodeC);\n          },\n          children: this.findValue(this.state.collapsed, props.nodeC) ? 'Expand Subtree' : 'Collapse Subtree'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 31\n        }, this) : null, props.nodeC && props.node ? /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"dropdown-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 47\n        }, this) : null, props.node ? /*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"dropdown-item\",\n          tabindex: \"-1\",\n          onClick: () => {\n            this.setState({\n              reroot: props.node\n            });\n          },\n          children: \"Reroot on this node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 30\n        }, this) : null, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }, this);\n    };\n\n    let new_wick = _props.newick;\n    let result = new_wick.split('');\n    let result2 = new_wick.split('');\n    let id = 0;\n\n    for (let i = 0; i < result.length; i++) {\n      if (result[i] === ':') {\n        result2.splice(i + id, 0, '/', id);\n        id += 2;\n      }\n    }\n\n    result = result2.join('');\n    this.state = {\n      tree: null,\n      width: _props.width,\n      height: _props.height,\n      sort: null,\n      reroot: null,\n      collapsed: [],\n      internal: false,\n      newick: result,\n      support: _props.support,\n      round: _props.round,\n      nodeName: '',\n      showlabel: true\n    };\n    this.baseState = this.state;\n  }\n\n  componentDidMount() {// let new_wick = this.state.newick;\n    // let result = new_wick.split('');\n    // let result2= new_wick.split('');\n    // let id=0;\n    // for(let i = 0; i < result.length; i++) {\n    //    if(result[i]===':') {\n    //    result2.splice(i+id,0,'/', id)\n    //      id+=2;\n    //    }\n    // }\n    // result = result2.join('')\n    // console.log(id)\n    // console.log(result)\n    // this.setState({newick: result})\n  }\n\n  findValue(haystack, needle) {\n    for (const item of haystack) {\n      if (item.data.name === needle.data.name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  toggleCollapse(node) {\n    if (this.findValue(this.state.collapsed, node)) {\n      const newCollapsed = this.state.collapsed.filter(element => element.data.name !== node.data.name);\n      this.setState({\n        collapsed: newCollapsed\n      });\n    } else if (!this.findValue(this.state.collapsed, node) || this.state.collapsed === []) {\n      this.setState(prevState => ({\n        collapsed: [...prevState.collapsed, node]\n      }));\n      this.setState({\n        isNodeCollapsed: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      padding\n    } = this.props;\n    const {\n      width,\n      height\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\",\n          width: 800\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Reload, {\n              onClick: () => {\n                this.setState(this.baseState);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HorizontalExpansionButton, {\n              onClick: () => this.toggleDimension(\"width\", \"expand\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HorizontalCompressionButton, {\n              onClick: () => this.toggleDimension(\"width\", \"compress\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(VerticalExpansionButton, {\n              onClick: () => this.toggleDimension(\"height\", \"expand\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(VerticalCompressionButton, {\n              onClick: () => this.toggleDimension(\"height\", \"compress\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AscendingSortButton, {\n              onClick: () => this.handleSort(\"ascending\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DescendingSortButton, {\n              onClick: () => this.handleSort(\"descending\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AlignTipsLeftButton, {\n              onClick: () => this.alignTips(\"left\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AlignTipsRightButton, {\n              onClick: () => this.alignTips(\"right\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Toggle the display of taxa names\",\n              variant: \"secondary\",\n              onClick: () => this.setState({\n                showlabel: !this.state.showlabel\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showLabel,\n                width: \"18\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Toggle the display of branch lengths\",\n              variant: \"secondary\",\n              onClick: () => this.setState({\n                attribute: !this.state.attribute\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showLength,\n                width: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DownloadImagetButton, {\n              onClick: this.handleClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              display: \"inline-block\",\n              float: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"find node\",\n              placeholder: \"Search tree\",\n              style: {\n                height: 40,\n                textAlign: \"center\"\n              },\n              onChange: this.myChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"row align-items-start\",\n            style: {\n              width: 470\n            },\n            children: [this.state.support.split('/')[0] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => this.setState({\n                  value1: !this.state.value1\n                }),\n                style: {\n                  marginRight: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                children: [this.state.value1 ? 'Hide' : 'Show', this.state.support.split('/')[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 33\n            }, this) : null, this.state.support.split('/')[1] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => this.setState({\n                  value2: !this.state.value2\n                }),\n                style: {\n                  marginRight: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                children: [this.state.value2 ? 'Hide' : 'Show', this.state.support.split('/')[1]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 33\n            }, this) : null, this.state.support.split('/')[2] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => this.setState({\n                  value3: !this.state.value3\n                }),\n                style: {\n                  marginRight: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                children: [this.state.value3 ? 'Hide' : 'Show', this.state.support.split('/')[2]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 33\n            }, this) : null, this.state.support.split('/')[3] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => this.setState({\n                  value4: !this.state.value4\n                }),\n                style: {\n                  marginRight: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                children: [this.state.value4 ? 'Hide' : 'Show', this.state.support.split('/')[3]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 33\n            }, this) : null, this.state.support.split('/')[4] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => this.setState({\n                  value5: !this.state.value5\n                }),\n                style: {\n                  marginRight: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                children: [this.state.value5 ? 'Hide' : 'Show', this.state.support.split('/')[4]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 33\n            }, this) : null, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Phylotree, {\n        width: width,\n        height: height,\n        transform: `translate(${padding}, ${padding})`,\n        labelStyler: this.labelStyler,\n        newick: this.state.newick,\n        alignTips: this.state.alignTips,\n        sort: this.state.sort,\n        reroot: this.state.reroot,\n        collapsed: this.state.collapsed,\n        showAttributes: this.state.attribute,\n        showLabels: this.state.showlabel,\n        showValue1: this.state.value1,\n        showValue2: this.state.value2,\n        showValue3: this.state.value3,\n        showValue4: this.state.value4,\n        showValue5: this.state.value5,\n        round1: this.state.round.split(',')[0],\n        round2: this.state.round.split(',')[1],\n        round3: this.state.round.split(',')[2],\n        round4: this.state.round.split(',')[3],\n        round5: this.state.round.split(',')[4],\n        tooltip: TooltipContents,\n        isOpen: this.openDropdown,\n        includeBLAxis: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPhylotreeApplication.defaultProps = {\n  padding: 100,\n  height: 600,\n  width: 600,\n  support: \"value 1/value 2/value 3/value 4/value 5\",\n  round: \"-1,-1,-1,-1,-1\"\n};\nexport default PhylotreeApplication;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Reload\");\n$RefreshReg$(_c2, \"HorizontalExpansionButton\");\n$RefreshReg$(_c3, \"HorizontalCompressionButton\");\n$RefreshReg$(_c4, \"VerticalExpansionButton\");\n$RefreshReg$(_c5, \"VerticalCompressionButton\");\n$RefreshReg$(_c6, \"AscendingSortButton\");\n$RefreshReg$(_c7, \"DescendingSortButton\");\n$RefreshReg$(_c8, \"AlignTipsRightButton\");\n$RefreshReg$(_c9, \"AlignTipsLeftButton\");\n$RefreshReg$(_c10, \"DownloadImagetButton\");\n$RefreshReg$(_c11, \"TooltipContents\");","map":{"version":3,"sources":["D:/app test/phylotree-react/src/lib/components/PhylotreeApplication.jsx"],"names":["faAlignLeft","faAlignRight","faArrowDown","faArrowLeft","faArrowRight","faArrowUp","faImage","faRedo","faSortAmountUp","FontAwesomeIcon","React","Component","Button","ButtonGroup","Phylotree","showLength","showLabel","TooltipContainer","saveSvgAsPng","require","imageOptions","scale","encoderOptions","backgroundColor","Reload","props","width","HorizontalExpansionButton","HorizontalCompressionButton","VerticalExpansionButton","fontSize","display","flexDirection","VerticalCompressionButton","AscendingSortButton","DescendingSortButton","AlignTipsRightButton","AlignTipsLeftButton","DownloadImagetButton","TooltipContents","data","attribute","PhylotreeApplication","constructor","toggleDimension","dimension","direction","new_dimension","state","new_state","setState","handleSort","sort","alignTips","myChangeHandler","event","nodeName","target","value","labelStyler","branch","rx","RegExp","identifier","name","search","fill","handleClick","document","getElementById","openDropdown","nodeC","toggleCollapse","findValue","collapsed","node","reroot","new_wick","newick","result","split","result2","id","i","length","splice","join","tree","height","internal","support","round","showlabel","baseState","componentDidMount","haystack","needle","item","newCollapsed","filter","element","prevState","isNodeCollapsed","render","padding","marginTop","float","textAlign","value1","marginRight","value2","value3","value4","value5","defaultProps"],"mappings":"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","sourcesContent":["import {\r\n  faAlignLeft, faAlignRight, faArrowDown, faArrowLeft, faArrowRight, faArrowUp, faImage, faRedo, faSortAmountUp\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { Component } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Phylotree from \"./phylotree\";\r\nimport showLength from \"./styles/icon_length.png\";\r\nimport \"./styles/phylotree.css\";\r\nimport showLabel from \"./styles/show_label.png\";\r\nimport TooltipContainer from \"./tooltip_container\";\r\nconst saveSvgAsPng = require('save-svg-as-png')\r\n\r\nconst imageOptions = {\r\n    scale: 5,\r\n    encoderOptions: 1,\r\n    backgroundColor: 'white'\r\n}\r\n\r\nfunction Reload(props) {\r\n    return (\r\n        <Button title=\"Reload tree\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon icon={faRedo}\r\n                size=\"lg\"\r\n                style={\r\n                    {width: 15}\r\n                }/>\r\n        </Button>\r\n    )\r\n}\r\nfunction HorizontalExpansionButton(props) {\r\n    return (\r\n        <Button title=\"Expand horizontally\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1}\r\n                icon={faArrowLeft}\r\n                style={\r\n                    {width: 10}\r\n                }/>\r\n            <FontAwesomeIcon key={2}\r\n                icon={faArrowRight}\r\n                style={\r\n                    {width: 10}\r\n                }/>\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction HorizontalCompressionButton(props) {\r\n    return (\r\n        <Button title=\"Compress horizontally\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1}\r\n                icon={faArrowRight}\r\n                style={\r\n                    {width: 10}\r\n                }/>\r\n            <FontAwesomeIcon key={2}\r\n                icon={faArrowLeft}\r\n                style={\r\n                    {width: 10}\r\n                }/>\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction VerticalExpansionButton(props) {\r\n    return (\r\n        <Button style={\r\n                {\r\n                    fontSize: 12,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\"\r\n                }\r\n            }\r\n            title=\"Expand vertically\"\r\n            variant=\"secondary\"\r\n            {...props}>\r\n            <FontAwesomeIcon key={1}\r\n                icon={faArrowUp}/>\r\n            <FontAwesomeIcon key={2}\r\n                icon={faArrowDown}/>\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction VerticalCompressionButton(props) {\r\n    return (\r\n        <Button style={\r\n                {\r\n                    fontSize: 12,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\"\r\n                }\r\n            }\r\n            title=\"Compress vertically\"\r\n            variant=\"secondary\"\r\n            {...props}>\r\n            <FontAwesomeIcon key={1}\r\n                icon={faArrowDown}/>\r\n            <FontAwesomeIcon key={2}\r\n                icon={faArrowUp}/>\r\n        </Button>\r\n    );\r\n}\r\n\r\n\r\nfunction AscendingSortButton(props) {\r\n    return (\r\n        <Button title=\"Sort in ascending order\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1}\r\n                icon={faSortAmountUp}\r\n                flip=\"vertical\"/>\r\n        </Button>\r\n    );\r\n}\r\n\r\n\r\nfunction DescendingSortButton(props) {\r\n    return (\r\n        <Button title=\"Sort in descending order\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1}\r\n                icon={faSortAmountUp}/>\r\n        </Button>\r\n    );\r\n}\r\n\r\n\r\nfunction AlignTipsRightButton(props) {\r\n    return (\r\n        <Button title=\"Align tips to right\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1}\r\n                icon={faAlignRight}/>\r\n        </Button>\r\n    );\r\n}\r\n\r\n\r\nfunction AlignTipsLeftButton(props) {\r\n    return (\r\n        <Button title=\"Align tips to left\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1}\r\n                icon={faAlignLeft}/>\r\n        </Button>\r\n    );\r\n}\r\nfunction DownloadImagetButton(props) {\r\n    return (\r\n        <Button title=\"Save image\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1}\r\n                icon={faImage}\r\n                flip=\"vertical\"/>\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction TooltipContents(props) {\r\n    return (\r\n        <TooltipContainer tooltip_width={10}\r\n            tooltip_height={50}\r\n\r\n            {...props}>\r\n            <rect x={0}\r\n                y={0}\r\n                width={180}\r\n                height={20}\r\n\r\n                fill='bisque'/>\r\n            <text x={90}\r\n                y={15}\r\n                fill=\"cadetblue\"\r\n                textAnchor=\"middle\">\r\n                Length: {\r\n                props.data.attribute\r\n            } </text>\r\n        </TooltipContainer>\r\n    );\r\n}\r\n\r\nclass PhylotreeApplication extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let new_wick = props.newick;\r\n        let result = new_wick.split('');\r\n        let result2 = new_wick.split('');\r\n        let id = 0;\r\n        for (let i = 0; i < result.length; i++) {\r\n            if (result[i] === ':') {\r\n                result2.splice(i + id, 0, '/', id)\r\n                id += 2;\r\n            }\r\n        }\r\n        result = result2.join('')\r\n        this.state = {\r\n            tree: null,\r\n            width: props.width,\r\n            height: props.height,\r\n            sort: null,\r\n            reroot: null,\r\n            collapsed: [],\r\n            internal: false,\r\n            newick: result,\r\n            support: props.support,\r\n            round: props.round,\r\n            nodeName: '',\r\n            showlabel: true\r\n        };\r\n        this.baseState = this.state;\r\n\r\n    }\r\n    componentDidMount() {\r\n        // let new_wick = this.state.newick;\r\n        // let result = new_wick.split('');\r\n        // let result2= new_wick.split('');\r\n        // let id=0;\r\n        // for(let i = 0; i < result.length; i++) {\r\n        //    if(result[i]===':') {\r\n        //    result2.splice(i+id,0,'/', id)\r\n        //      id+=2;\r\n        //    }\r\n        // }\r\n        // result = result2.join('')\r\n        // console.log(id)\r\n        // console.log(result)\r\n        // this.setState({newick: result})\r\n\r\n    }\r\n\r\n    toggleDimension = (dimension, direction) => {\r\n        const new_dimension = this.state[dimension] + (direction === \"expand\" ? 100 : -100),\r\n            new_state = {};\r\n        new_state[dimension] = new_dimension;\r\n        this.setState(new_state);\r\n    }\r\n    handleSort = (direction) => {\r\n        this.setState({sort: direction});\r\n    }\r\n    alignTips = (direction) => {\r\n        this.setState({alignTips: direction});\r\n    }\r\n    myChangeHandler = (event) => {\r\n        this.setState({nodeName: event.target.value});\r\n\r\n    }\r\n    findValue(haystack, needle) {\r\n        for (const item of haystack) {\r\n            if (item.data.name === needle.data.name) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    toggleCollapse(node) {\r\n\r\n        if (this.findValue(this.state.collapsed, node)) {\r\n            const newCollapsed = this.state.collapsed.filter(element => (element.data.name !== node.data.name));\r\n            this.setState({collapsed: newCollapsed});\r\n\r\n        } else if (!this.findValue(this.state.collapsed, node) || this.state.collapsed === []) {\r\n            this.setState(prevState => ({\r\n                collapsed: [\r\n                    ...prevState.collapsed,\r\n                    node\r\n                ]\r\n            }))\r\n            this.setState({isNodeCollapsed: true})\r\n\r\n        }\r\n\r\n    }\r\n\r\n    labelStyler = (branch) => {\r\n        var rx = new RegExp(this.state.nodeName, \"i\");\r\n        const identifier = branch.name.search(rx)\r\n        if (this.state.nodeName !== '') {\r\n            const fill = identifier !== -1 ? 'red' : 'black'\r\n            return {fill};\r\n        }\r\n    }\r\n    handleClick = () => {\r\n        saveSvgAsPng.saveSvgAsPng(document.getElementById('svg-chart'), 'shapes.png', imageOptions);\r\n    }\r\n    openDropdown = (props) => {\r\n\r\n        return (\r\n            <div class=\"dropdown-menu\" role=\"menu\"\r\n                style={\r\n                    {\r\n                        ...props\r\n                    }\r\n            }>\r\n                {\r\n                props.nodeC ? <a class=\"dropdown-item\" tabindex=\"-1\"\r\n                    onClick={\r\n                        () => {\r\n                            this.toggleCollapse(props.nodeC)\r\n                        }\r\n                }>\r\n                    {\r\n                    this.findValue(this.state.collapsed, props.nodeC) ? 'Expand Subtree' : 'Collapse Subtree'\r\n                }</a> : null\r\n            }\r\n                {\r\n                (props.nodeC && props.node) ? <div class=\"dropdown-divider\"></div> : null\r\n            }\r\n                {\r\n                props.node ? <a class=\"dropdown-item\" tabindex=\"-1\"\r\n                    onClick={\r\n                        () => {\r\n                            this.setState({reroot: props.node})\r\n                        }\r\n                }>Reroot on this node</a> : null\r\n            } </div>\r\n\r\n        )\r\n    }\r\n    render() {\r\n        const {padding} = this.props;\r\n        const {width, height} = this.state;\r\n        return (\r\n            <div class=\"container\">\r\n                <div style={\r\n                    {\r\n                        display: \"inline-block\",\r\n                        width: 800\r\n                    }\r\n                }>\r\n                    <div style={\r\n                        {marginTop: 20}\r\n                    }>\r\n                        <ButtonGroup>\r\n                            <Reload onClick={\r\n                                () => {\r\n                                    this.setState(this.baseState)\r\n                                }\r\n                            }/>\r\n                            <HorizontalExpansionButton onClick={\r\n                                () => this.toggleDimension(\"width\", \"expand\")\r\n                            }/>\r\n                            <HorizontalCompressionButton onClick={\r\n                                () => this.toggleDimension(\"width\", \"compress\")\r\n                            }/>\r\n                            <VerticalExpansionButton onClick={\r\n                                () => this.toggleDimension(\"height\", \"expand\")\r\n                            }/>\r\n                            <VerticalCompressionButton onClick={\r\n                                () => this.toggleDimension(\"height\", \"compress\")\r\n                            }/>\r\n                            <AscendingSortButton onClick={\r\n                                () => this.handleSort(\"ascending\")\r\n                            }/>\r\n                            <DescendingSortButton onClick={\r\n                                () => this.handleSort(\"descending\")\r\n                            }/>\r\n                            <AlignTipsLeftButton onClick={\r\n                                () => this.alignTips(\"left\")\r\n                            }/>\r\n                            <AlignTipsRightButton onClick={\r\n                                () => this.alignTips(\"right\")\r\n                            }/>\r\n                            <Button title=\"Toggle the display of taxa names\" variant=\"secondary\"\r\n                                onClick={\r\n                                    () => this.setState({\r\n                                        showlabel: !this.state.showlabel\r\n                                    })\r\n                            }>\r\n                                <img src={showLabel}\r\n                                    width=\"18\"/>\r\n                            </Button>\r\n                            <Button title=\"Toggle the display of branch lengths\" variant=\"secondary\"\r\n                                onClick={\r\n                                    () => this.setState({\r\n                                        attribute: !this.state.attribute\r\n                                    })\r\n                            }>\r\n                                <img src={showLength}\r\n                                    width=\"20\"/>\r\n                            </Button>\r\n                            <DownloadImagetButton onClick={\r\n                                this.handleClick\r\n                            }/>\r\n                        </ButtonGroup>\r\n\r\n                        <form style={\r\n                            {\r\n                                display: \"inline-block\",\r\n                                float: \"right\"\r\n                            }\r\n                        }>\r\n                            <input type='text' name='find node' placeholder='Search tree'\r\n                                style={\r\n                                    {\r\n                                        height: 40,\r\n                                        textAlign: \"center\"\r\n                                    }\r\n                                }\r\n                                onChange={\r\n                                    this.myChangeHandler\r\n                                }/>\r\n                        </form>\r\n\r\n                        <div class=\"row align-items-start\"\r\n                            style={\r\n                                {width: 470}\r\n                        }>\r\n                            {\r\n                            (this.state.support.split('/')[0]) ? (\r\n                                <div class=\"col\">\r\n                                    <input type='checkbox'\r\n                                        onChange={\r\n                                            () => this.setState({\r\n                                                value1: !this.state.value1\r\n                                            })\r\n                                        }\r\n                                        style={\r\n                                            {marginRight: 5}\r\n                                        }/>\r\n                                    <text>{\r\n                                        this.state.value1 ? 'Hide' : 'Show'\r\n                                    }\r\n                                        {\r\n                                        this.state.support.split('/')[0]\r\n                                    }</text>\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n\r\n\r\n                            {\r\n                            (this.state.support.split('/')[1]) ? (\r\n                                <div class=\"col\">\r\n                                    <input type='checkbox'\r\n                                        onChange={\r\n                                            () => this.setState({\r\n                                                value2: !this.state.value2\r\n                                            })\r\n                                        }\r\n                                        style={\r\n                                            {marginRight: 5}\r\n                                        }/>\r\n                                    <text>{\r\n                                        this.state.value2 ? 'Hide' : 'Show'\r\n                                    }\r\n                                        {\r\n                                        this.state.support.split('/')[1]\r\n                                    }</text>\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                            {\r\n                            (this.state.support.split('/')[2]) ? (\r\n                                <div class=\"col\">\r\n                                    <input type='checkbox'\r\n                                        onChange={\r\n                                            () => this.setState({\r\n                                                value3: !this.state.value3\r\n                                            })\r\n                                        }\r\n                                        style={\r\n                                            {marginRight: 5}\r\n                                        }/>\r\n                                    <text>{\r\n                                        this.state.value3 ? 'Hide' : 'Show'\r\n                                    }\r\n                                        {\r\n                                        this.state.support.split('/')[2]\r\n                                    }</text>\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n\r\n\r\n                            {\r\n                            (this.state.support.split('/')[3]) ? (\r\n                                <div class=\"col\">\r\n                                    <input type='checkbox'\r\n                                        onChange={\r\n                                            () => this.setState({\r\n                                                value4: !this.state.value4\r\n                                            })\r\n                                        }\r\n                                        style={\r\n                                            {marginRight: 5}\r\n                                        }/>\r\n                                    <text>{\r\n                                        this.state.value4 ? 'Hide' : 'Show'\r\n                                    }\r\n                                        {\r\n                                        this.state.support.split('/')[3]\r\n                                    }</text>\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                            {\r\n                            (this.state.support.split('/')[4]) ? (\r\n                                <div class=\"col\">\r\n                                    <input type='checkbox'\r\n                                        onChange={\r\n                                            () => this.setState({\r\n                                                value5: !this.state.value5\r\n                                            })\r\n                                        }\r\n                                        style={\r\n                                            {marginRight: 5}\r\n                                        }/>\r\n                                    <text>{\r\n                                        this.state.value5 ? 'Hide' : 'Show'\r\n                                    }\r\n                                        {\r\n                                        this.state.support.split('/')[4]\r\n                                    }</text>\r\n                                </div>\r\n                            ) : null\r\n                        } </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <Phylotree width={width}\r\n                    height={height}\r\n                    transform={\r\n                        `translate(${padding}, ${padding})`\r\n                    }\r\n                    labelStyler={\r\n                        this.labelStyler\r\n                    }\r\n                    newick={\r\n                        this.state.newick\r\n                    }\r\n                    alignTips={\r\n                        this.state.alignTips\r\n                    }\r\n                    sort={\r\n                        this.state.sort\r\n                    }\r\n                    reroot={\r\n                        this.state.reroot\r\n                    }\r\n                    collapsed={\r\n                        this.state.collapsed\r\n                    }\r\n                    showAttributes={\r\n                        this.state.attribute\r\n                    }\r\n                    showLabels\r\n                    ={this.state.showlabel}\r\n                    showValue1={\r\n                        this.state.value1\r\n                    }\r\n                    showValue2={\r\n                        this.state.value2\r\n                    }\r\n                    showValue3={\r\n                        this.state.value3\r\n                    }\r\n                    showValue4={\r\n                        this.state.value4\r\n                    }\r\n                    showValue5={\r\n                        this.state.value5\r\n                    }\r\n                    round1={\r\n                        this.state.round.split(',')[0]\r\n                    }\r\n                    round2={\r\n                        this.state.round.split(',')[1]\r\n                    }\r\n                    round3={\r\n                        this.state.round.split(',')[2]\r\n                    }\r\n                    round4={\r\n                        this.state.round.split(',')[3]\r\n                    }\r\n                    round5={\r\n                        this.state.round.split(',')[4]\r\n                    }\r\n                    tooltip\r\n                    ={TooltipContents}\r\n                    isOpen={\r\n                        this.openDropdown\r\n                    }\r\n                    includeBLAxis/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n} PhylotreeApplication.defaultProps = {\r\n    padding: 100,\r\n    height: 600,\r\n    width: 600,\r\n    support: \"value 1/value 2/value 3/value 4/value 5\",\r\n    round: \"-1,-1,-1,-1,-1\"\r\n};\r\n\r\nexport default PhylotreeApplication;\r\n"]},"metadata":{},"sourceType":"module"}