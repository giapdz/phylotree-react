{"ast":null,"code":"var _jsxFileName = \"D:\\\\app test\\\\phylotree-react\\\\src\\\\lib\\\\components\\\\PhylotreeApplication.jsx\";\nimport { faAlignLeft, faAlignRight, faArrowDown, faArrowLeft, faArrowRight, faArrowUp, faImage, faRedo, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Phylotree from \"./phylotree\";\nimport showLength from \"./styles/icon_length.png\";\nimport \"./styles/phylotree.css\";\nimport showLabel from \"./styles/show_label.png\";\nimport TooltipContainer from \"./tooltip_container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst saveSvgAsPng = require(\"save-svg-as-png\");\n\nconst imageOptions = {\n  scale: 5,\n  encoderOptions: 1,\n  backgroundColor: \"white\"\n};\n\nfunction Reload(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Reload tree\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faRedo,\n      size: \"lg\",\n      style: {\n        width: 15\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Reload;\n\nfunction HorizontalExpansionButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Expand horizontally\",\n    variant: \"secondary\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      style: {\n        width: 10\n      }\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowRight,\n      style: {\n        width: 10\n      }\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = HorizontalExpansionButton;\n\nfunction HorizontalCompressionButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Compress horizontally\",\n    variant: \"secondary\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowRight,\n      style: {\n        width: 10\n      }\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      style: {\n        width: 10\n      }\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = HorizontalCompressionButton;\n\nfunction VerticalExpansionButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    style: {\n      fontSize: 12,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    title: \"Expand vertically\",\n    variant: \"secondary\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowUp\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowDown\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = VerticalExpansionButton;\n\nfunction VerticalCompressionButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    style: {\n      fontSize: 12,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    title: \"Compress vertically\",\n    variant: \"secondary\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowDown\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faArrowUp\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_c5 = VerticalCompressionButton;\n\nfunction AscendingSortButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Sort in ascending order\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSortAmountUp,\n      flip: \"vertical\"\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_c6 = AscendingSortButton;\n\nfunction DescendingSortButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Sort in descending order\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSortAmountUp\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_c7 = DescendingSortButton;\n\nfunction AlignTipsRightButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Align tips to right\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAlignRight\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_c8 = AlignTipsRightButton;\n\nfunction AlignTipsLeftButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Align tips to left\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAlignLeft\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_c9 = AlignTipsLeftButton;\n\nfunction DownloadImagetButton(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Save image\",\n    variant: \"secondary\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faImage,\n      flip: \"vertical\"\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_c10 = DownloadImagetButton;\n\nfunction TooltipContents(props) {\n  return /*#__PURE__*/_jsxDEV(TooltipContainer, {\n    tooltip_width: 10,\n    tooltip_height: 50,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: 0,\n      y: 0,\n      width: 180,\n      height: 20,\n      fill: \"bisque\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: 90,\n      y: 15,\n      fill: \"cadetblue\",\n      textAnchor: \"middle\",\n      children: [\"Length: \", props.data.attribute, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n\n_c11 = TooltipContents;\n\nclass PhylotreeApplication extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.toggleDimension = (dimension, direction) => {\n      const new_dimension = this.state[dimension] + (direction === \"expand\" ? 100 : -100),\n            new_state = {};\n      new_state[dimension] = new_dimension;\n      this.setState(new_state);\n    };\n\n    this.handleSort = direction => {\n      this.setState({\n        sort: direction\n      });\n    };\n\n    this.alignTips = direction => {\n      this.setState({\n        alignTips: direction\n      });\n    };\n\n    this.myChangeHandler = event => {\n      this.setState({\n        nodeName: event.target.value\n      });\n    };\n\n    this.labelStyler = branch => {\n      var rx = new RegExp(this.state.nodeName, \"i\");\n      const identifier = branch.name.search(rx);\n\n      if (this.state.nodeName !== \"\") {\n        const fill = identifier !== -1 ? \"red\" : \"black\";\n        return {\n          fill\n        };\n      }\n    };\n\n    this.handleClick = () => {\n      saveSvgAsPng.saveSvgAsPng(document.getElementById(\"svg-chart\"), \"shapes.png\", imageOptions);\n    };\n\n    this.openDropdown = props => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dropdown-menu\",\n        role: \"menu\",\n        style: { ...props\n        },\n        children: [props.nodeC ? /*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"dropdown-item\",\n          tabindex: \"-1\",\n          onClick: () => {\n            this.toggleCollapse(props.nodeC);\n          },\n          children: this.findValue(this.state.collapsed, props.nodeC) ? \"Expand Subtree\" : \"Collapse Subtree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this) : null, props.nodeC && props.node ? /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"dropdown-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this) : null, props.node ? /*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"dropdown-item\",\n          tabindex: \"-1\",\n          onClick: () => {\n            this.setState({\n              reroot: props.node\n            });\n          },\n          children: \"Reroot on this node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this) : null, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this);\n    };\n\n    let new_wick = _props.newick;\n    let result = new_wick.split(\"\");\n    let result2 = new_wick.split(\"\");\n    let id = 0;\n\n    for (let i = 0; i < result.length; i++) {\n      if (result[i] === \":\") {\n        result2.splice(i + id, 0, \"/\", id);\n        id += 2;\n      }\n    }\n\n    result = result2.join(\"\");\n    this.state = {\n      tree: null,\n      width: _props.width,\n      height: _props.height,\n      sort: null,\n      reroot: null,\n      collapsed: [],\n      internal: false,\n      newick: result,\n      support: _props.support,\n      round: _props.round,\n      nodeName: \"\",\n      showlabel: true\n    };\n    this.baseState = this.state;\n  }\n\n  findValue(haystack, needle) {\n    for (const item of haystack) {\n      if (item.data.name === needle.data.name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  toggleCollapse(node) {\n    if (this.findValue(this.state.collapsed, node)) {\n      const newCollapsed = this.state.collapsed.filter(element => element.data.name !== node.data.name);\n      this.setState({\n        collapsed: newCollapsed\n      });\n    } else if (!this.findValue(this.state.collapsed, node) || this.state.collapsed === []) {\n      this.setState(prevState => ({\n        collapsed: [...prevState.collapsed, node]\n      }));\n      this.setState({\n        isNodeCollapsed: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      padding\n    } = this.props;\n    const {\n      width,\n      height\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\",\n          width: 800\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Reload, {\n              onClick: () => {\n                this.setState(this.baseState);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HorizontalExpansionButton, {\n              onClick: () => this.toggleDimension(\"width\", \"expand\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HorizontalCompressionButton, {\n              onClick: () => this.toggleDimension(\"width\", \"compress\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(VerticalExpansionButton, {\n              onClick: () => this.toggleDimension(\"height\", \"expand\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(VerticalCompressionButton, {\n              onClick: () => this.toggleDimension(\"height\", \"compress\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AscendingSortButton, {\n              onClick: () => this.handleSort(\"ascending\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DescendingSortButton, {\n              onClick: () => this.handleSort(\"descending\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AlignTipsLeftButton, {\n              onClick: () => this.alignTips(\"left\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AlignTipsRightButton, {\n              onClick: () => this.alignTips(\"right\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Toggle the display of taxa names\",\n              variant: \"secondary\",\n              onClick: () => this.setState({\n                showlabel: !this.state.showlabel\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showLabel,\n                width: \"18\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Toggle the display of branch lengths\",\n              variant: \"secondary\",\n              onClick: () => this.setState({\n                attribute: !this.state.attribute\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showLength,\n                width: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DownloadImagetButton, {\n              onClick: this.handleClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              display: \"inline-block\",\n              float: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"find node\",\n              placeholder: \"Search tree\",\n              style: {\n                height: 40,\n                textAlign: \"center\"\n              },\n              onChange: this.myChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"row align-items-start\",\n            style: {\n              width: 470\n            },\n            children: [this.state.support.split(\"/\")[0] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => this.setState({\n                  value1: !this.state.value1\n                }),\n                style: {\n                  marginRight: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                children: [this.state.value1 ? \"Hide\" : \"Show\", this.state.support.split(\"/\")[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 33\n            }, this) : null, this.state.support.split(\"/\")[1] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => this.setState({\n                  value2: !this.state.value2\n                }),\n                style: {\n                  marginRight: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                children: [this.state.value2 ? \"Hide\" : \"Show\", this.state.support.split(\"/\")[1]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 33\n            }, this) : null, this.state.support.split(\"/\")[2] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => this.setState({\n                  value3: !this.state.value3\n                }),\n                style: {\n                  marginRight: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                children: [this.state.value3 ? \"Hide\" : \"Show\", this.state.support.split(\"/\")[2]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 33\n            }, this) : null, this.state.support.split(\"/\")[3] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => this.setState({\n                  value4: !this.state.value4\n                }),\n                style: {\n                  marginRight: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                children: [this.state.value4 ? \"Hide\" : \"Show\", this.state.support.split(\"/\")[3]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 33\n            }, this) : null, this.state.support.split(\"/\")[4] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => this.setState({\n                  value5: !this.state.value5\n                }),\n                style: {\n                  marginRight: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                children: [this.state.value5 ? \"Hide\" : \"Show\", this.state.support.split(\"/\")[4]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 33\n            }, this) : null, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Phylotree, {\n        width: width,\n        height: height,\n        transform: `translate(${padding}, ${padding})`,\n        labelStyler: this.labelStyler,\n        newick: this.state.newick,\n        alignTips: this.state.alignTips,\n        sort: this.state.sort,\n        reroot: this.state.reroot,\n        collapsed: this.state.collapsed,\n        showAttributes: this.state.attribute,\n        showLabels: this.state.showlabel,\n        showValue1: this.state.value1,\n        showValue2: this.state.value2,\n        showValue3: this.state.value3,\n        showValue4: this.state.value4,\n        showValue5: this.state.value5,\n        round1: this.state.round.split(\",\")[0],\n        round2: this.state.round.split(\",\")[1],\n        round3: this.state.round.split(\",\")[2],\n        round4: this.state.round.split(\",\")[3],\n        round5: this.state.round.split(\",\")[4],\n        tooltip: TooltipContents,\n        isOpen: this.openDropdown,\n        includeBLAxis: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPhylotreeApplication.defaultProps = {\n  padding: 100,\n  height: 600,\n  width: 600,\n  support: \"value 1/value 2/value 3/value 4/value 5\",\n  round: \"-1,-1,-1,-1,-1\"\n};\nexport default PhylotreeApplication;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Reload\");\n$RefreshReg$(_c2, \"HorizontalExpansionButton\");\n$RefreshReg$(_c3, \"HorizontalCompressionButton\");\n$RefreshReg$(_c4, \"VerticalExpansionButton\");\n$RefreshReg$(_c5, \"VerticalCompressionButton\");\n$RefreshReg$(_c6, \"AscendingSortButton\");\n$RefreshReg$(_c7, \"DescendingSortButton\");\n$RefreshReg$(_c8, \"AlignTipsRightButton\");\n$RefreshReg$(_c9, \"AlignTipsLeftButton\");\n$RefreshReg$(_c10, \"DownloadImagetButton\");\n$RefreshReg$(_c11, \"TooltipContents\");","map":{"version":3,"sources":["D:/app test/phylotree-react/src/lib/components/PhylotreeApplication.jsx"],"names":["faAlignLeft","faAlignRight","faArrowDown","faArrowLeft","faArrowRight","faArrowUp","faImage","faRedo","faSortAmountUp","FontAwesomeIcon","React","Component","Button","ButtonGroup","Phylotree","showLength","showLabel","TooltipContainer","saveSvgAsPng","require","imageOptions","scale","encoderOptions","backgroundColor","Reload","props","width","HorizontalExpansionButton","HorizontalCompressionButton","VerticalExpansionButton","fontSize","display","flexDirection","VerticalCompressionButton","AscendingSortButton","DescendingSortButton","AlignTipsRightButton","AlignTipsLeftButton","DownloadImagetButton","TooltipContents","data","attribute","PhylotreeApplication","constructor","toggleDimension","dimension","direction","new_dimension","state","new_state","setState","handleSort","sort","alignTips","myChangeHandler","event","nodeName","target","value","labelStyler","branch","rx","RegExp","identifier","name","search","fill","handleClick","document","getElementById","openDropdown","nodeC","toggleCollapse","findValue","collapsed","node","reroot","new_wick","newick","result","split","result2","id","i","length","splice","join","tree","height","internal","support","round","showlabel","baseState","haystack","needle","item","newCollapsed","filter","element","prevState","isNodeCollapsed","render","padding","marginTop","float","textAlign","value1","marginRight","value2","value3","value4","value5","defaultProps"],"mappings":"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","sourcesContent":["import {\r\n    faAlignLeft,\r\n    faAlignRight,\r\n    faArrowDown,\r\n    faArrowLeft,\r\n    faArrowRight,\r\n    faArrowUp,\r\n    faImage,\r\n    faRedo,\r\n    faSortAmountUp,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Phylotree from \"./phylotree\";\r\nimport showLength from \"./styles/icon_length.png\";\r\nimport \"./styles/phylotree.css\";\r\nimport showLabel from \"./styles/show_label.png\";\r\nimport TooltipContainer from \"./tooltip_container\";\r\nconst saveSvgAsPng = require(\"save-svg-as-png\");\r\n\r\nconst imageOptions = {\r\n    scale: 5,\r\n    encoderOptions: 1,\r\n    backgroundColor: \"white\",\r\n};\r\n\r\nfunction Reload(props) {\r\n    return (\r\n        <Button title=\"Reload tree\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon icon={faRedo} size=\"lg\" style={{ width: 15 }} />\r\n        </Button>\r\n    );\r\n}\r\nfunction HorizontalExpansionButton(props) {\r\n    return (\r\n        <Button title=\"Expand horizontally\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1} icon={faArrowLeft} style={{ width: 10 }} />\r\n            <FontAwesomeIcon\r\n                key={2}\r\n                icon={faArrowRight}\r\n                style={{ width: 10 }}\r\n            />\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction HorizontalCompressionButton(props) {\r\n    return (\r\n        <Button title=\"Compress horizontally\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon\r\n                key={1}\r\n                icon={faArrowRight}\r\n                style={{ width: 10 }}\r\n            />\r\n            <FontAwesomeIcon key={2} icon={faArrowLeft} style={{ width: 10 }} />\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction VerticalExpansionButton(props) {\r\n    return (\r\n        <Button\r\n            style={{\r\n                fontSize: 12,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n            }}\r\n            title=\"Expand vertically\"\r\n            variant=\"secondary\"\r\n            {...props}\r\n        >\r\n            <FontAwesomeIcon key={1} icon={faArrowUp} />\r\n            <FontAwesomeIcon key={2} icon={faArrowDown} />\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction VerticalCompressionButton(props) {\r\n    return (\r\n        <Button\r\n            style={{\r\n                fontSize: 12,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n            }}\r\n            title=\"Compress vertically\"\r\n            variant=\"secondary\"\r\n            {...props}\r\n        >\r\n            <FontAwesomeIcon key={1} icon={faArrowDown} />\r\n            <FontAwesomeIcon key={2} icon={faArrowUp} />\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction AscendingSortButton(props) {\r\n    return (\r\n        <Button title=\"Sort in ascending order\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1} icon={faSortAmountUp} flip=\"vertical\" />\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction DescendingSortButton(props) {\r\n    return (\r\n        <Button title=\"Sort in descending order\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1} icon={faSortAmountUp} />\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction AlignTipsRightButton(props) {\r\n    return (\r\n        <Button title=\"Align tips to right\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1} icon={faAlignRight} />\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction AlignTipsLeftButton(props) {\r\n    return (\r\n        <Button title=\"Align tips to left\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1} icon={faAlignLeft} />\r\n        </Button>\r\n    );\r\n}\r\nfunction DownloadImagetButton(props) {\r\n    return (\r\n        <Button title=\"Save image\" variant=\"secondary\" {...props}>\r\n            <FontAwesomeIcon key={1} icon={faImage} flip=\"vertical\" />\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction TooltipContents(props) {\r\n    return (\r\n        <TooltipContainer tooltip_width={10} tooltip_height={50} {...props}>\r\n            <rect x={0} y={0} width={180} height={20} fill=\"bisque\" />\r\n            <text x={90} y={15} fill=\"cadetblue\" textAnchor=\"middle\">\r\n                Length: {props.data.attribute}{\" \"}\r\n            </text>\r\n        </TooltipContainer>\r\n    );\r\n}\r\n\r\nclass PhylotreeApplication extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let new_wick = props.newick;\r\n        let result = new_wick.split(\"\");\r\n        let result2 = new_wick.split(\"\");\r\n        let id = 0;\r\n        for (let i = 0; i < result.length; i++) {\r\n            if (result[i] === \":\") {\r\n                result2.splice(i + id, 0, \"/\", id);\r\n                id += 2;\r\n            }\r\n        }\r\n        result = result2.join(\"\");\r\n        this.state = {\r\n            tree: null,\r\n            width: props.width,\r\n            height: props.height,\r\n            sort: null,\r\n            reroot: null,\r\n            collapsed: [],\r\n            internal: false,\r\n            newick: result,\r\n            support: props.support,\r\n            round: props.round,\r\n            nodeName: \"\",\r\n            showlabel: true,\r\n        };\r\n        this.baseState = this.state;\r\n    }\r\n\r\n    toggleDimension = (dimension, direction) => {\r\n        const new_dimension =\r\n                this.state[dimension] + (direction === \"expand\" ? 100 : -100),\r\n            new_state = {};\r\n        new_state[dimension] = new_dimension;\r\n        this.setState(new_state);\r\n    };\r\n    handleSort = (direction) => {\r\n        this.setState({ sort: direction });\r\n    };\r\n    alignTips = (direction) => {\r\n        this.setState({ alignTips: direction });\r\n    };\r\n    myChangeHandler = (event) => {\r\n        this.setState({ nodeName: event.target.value });\r\n    };\r\n    findValue(haystack, needle) {\r\n        for (const item of haystack) {\r\n            if (item.data.name === needle.data.name) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    toggleCollapse(node) {\r\n        if (this.findValue(this.state.collapsed, node)) {\r\n            const newCollapsed = this.state.collapsed.filter(\r\n                (element) => element.data.name !== node.data.name\r\n            );\r\n            this.setState({ collapsed: newCollapsed });\r\n        } else if (\r\n            !this.findValue(this.state.collapsed, node) ||\r\n            this.state.collapsed === []\r\n        ) {\r\n            this.setState((prevState) => ({\r\n                collapsed: [...prevState.collapsed, node],\r\n            }));\r\n            this.setState({ isNodeCollapsed: true });\r\n        }\r\n    }\r\n\r\n    labelStyler = (branch) => {\r\n        var rx = new RegExp(this.state.nodeName, \"i\");\r\n        const identifier = branch.name.search(rx);\r\n        if (this.state.nodeName !== \"\") {\r\n            const fill = identifier !== -1 ? \"red\" : \"black\";\r\n            return { fill };\r\n        }\r\n    };\r\n    handleClick = () => {\r\n        saveSvgAsPng.saveSvgAsPng(\r\n            document.getElementById(\"svg-chart\"),\r\n            \"shapes.png\",\r\n            imageOptions\r\n        );\r\n    };\r\n    openDropdown = (props) => {\r\n        return (\r\n            <div\r\n                class=\"dropdown-menu\"\r\n                role=\"menu\"\r\n                style={{\r\n                    ...props,\r\n                }}\r\n            >\r\n                {props.nodeC ? (\r\n                    <a\r\n                        class=\"dropdown-item\"\r\n                        tabindex=\"-1\"\r\n                        onClick={() => {\r\n                            this.toggleCollapse(props.nodeC);\r\n                        }}\r\n                    >\r\n                        {this.findValue(this.state.collapsed, props.nodeC)\r\n                            ? \"Expand Subtree\"\r\n                            : \"Collapse Subtree\"}\r\n                    </a>\r\n                ) : null}\r\n                {props.nodeC && props.node ? (\r\n                    <div class=\"dropdown-divider\"></div>\r\n                ) : null}\r\n                {props.node ? (\r\n                    <a\r\n                        class=\"dropdown-item\"\r\n                        tabindex=\"-1\"\r\n                        onClick={() => {\r\n                            this.setState({ reroot: props.node });\r\n                        }}\r\n                    >\r\n                        Reroot on this node\r\n                    </a>\r\n                ) : null}{\" \"}\r\n            </div>\r\n        );\r\n    };\r\n    render() {\r\n        const { padding } = this.props;\r\n        const { width, height } = this.state;\r\n        return (\r\n            <div class=\"container\">\r\n                <div\r\n                    style={{\r\n                        display: \"inline-block\",\r\n                        width: 800,\r\n                    }}\r\n                >\r\n                    <div style={{ marginTop: 20 }}>\r\n                        <ButtonGroup>\r\n                            <Reload\r\n                                onClick={() => {\r\n                                    this.setState(this.baseState);\r\n                                }}\r\n                            />\r\n                            <HorizontalExpansionButton\r\n                                onClick={() =>\r\n                                    this.toggleDimension(\"width\", \"expand\")\r\n                                }\r\n                            />\r\n                            <HorizontalCompressionButton\r\n                                onClick={() =>\r\n                                    this.toggleDimension(\"width\", \"compress\")\r\n                                }\r\n                            />\r\n                            <VerticalExpansionButton\r\n                                onClick={() =>\r\n                                    this.toggleDimension(\"height\", \"expand\")\r\n                                }\r\n                            />\r\n                            <VerticalCompressionButton\r\n                                onClick={() =>\r\n                                    this.toggleDimension(\"height\", \"compress\")\r\n                                }\r\n                            />\r\n                            <AscendingSortButton\r\n                                onClick={() => this.handleSort(\"ascending\")}\r\n                            />\r\n                            <DescendingSortButton\r\n                                onClick={() => this.handleSort(\"descending\")}\r\n                            />\r\n                            <AlignTipsLeftButton\r\n                                onClick={() => this.alignTips(\"left\")}\r\n                            />\r\n                            <AlignTipsRightButton\r\n                                onClick={() => this.alignTips(\"right\")}\r\n                            />\r\n                            <Button\r\n                                title=\"Toggle the display of taxa names\"\r\n                                variant=\"secondary\"\r\n                                onClick={() =>\r\n                                    this.setState({\r\n                                        showlabel: !this.state.showlabel,\r\n                                    })\r\n                                }\r\n                            >\r\n                                <img src={showLabel} width=\"18\" />\r\n                            </Button>\r\n                            <Button\r\n                                title=\"Toggle the display of branch lengths\"\r\n                                variant=\"secondary\"\r\n                                onClick={() =>\r\n                                    this.setState({\r\n                                        attribute: !this.state.attribute,\r\n                                    })\r\n                                }\r\n                            >\r\n                                <img src={showLength} width=\"20\" />\r\n                            </Button>\r\n                            <DownloadImagetButton onClick={this.handleClick} />\r\n                        </ButtonGroup>\r\n\r\n                        <form\r\n                            style={{\r\n                                display: \"inline-block\",\r\n                                float: \"right\",\r\n                            }}\r\n                        >\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"find node\"\r\n                                placeholder=\"Search tree\"\r\n                                style={{\r\n                                    height: 40,\r\n                                    textAlign: \"center\",\r\n                                }}\r\n                                onChange={this.myChangeHandler}\r\n                            />\r\n                        </form>\r\n\r\n                        <div\r\n                            class=\"row align-items-start\"\r\n                            style={{ width: 470 }}\r\n                        >\r\n                            {this.state.support.split(\"/\")[0] ? (\r\n                                <div class=\"col\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        onChange={() =>\r\n                                            this.setState({\r\n                                                value1: !this.state.value1,\r\n                                            })\r\n                                        }\r\n                                        style={{ marginRight: 5 }}\r\n                                    />\r\n                                    <text>\r\n                                        {this.state.value1 ? \"Hide\" : \"Show\"}\r\n                                        {this.state.support.split(\"/\")[0]}\r\n                                    </text>\r\n                                </div>\r\n                            ) : null}\r\n                            {this.state.support.split(\"/\")[1] ? (\r\n                                <div class=\"col\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        onChange={() =>\r\n                                            this.setState({\r\n                                                value2: !this.state.value2,\r\n                                            })\r\n                                        }\r\n                                        style={{ marginRight: 5 }}\r\n                                    />\r\n                                    <text>\r\n                                        {this.state.value2 ? \"Hide\" : \"Show\"}\r\n                                        {this.state.support.split(\"/\")[1]}\r\n                                    </text>\r\n                                </div>\r\n                            ) : null}\r\n                            {this.state.support.split(\"/\")[2] ? (\r\n                                <div class=\"col\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        onChange={() =>\r\n                                            this.setState({\r\n                                                value3: !this.state.value3,\r\n                                            })\r\n                                        }\r\n                                        style={{ marginRight: 5 }}\r\n                                    />\r\n                                    <text>\r\n                                        {this.state.value3 ? \"Hide\" : \"Show\"}\r\n                                        {this.state.support.split(\"/\")[2]}\r\n                                    </text>\r\n                                </div>\r\n                            ) : null}\r\n                            {this.state.support.split(\"/\")[3] ? (\r\n                                <div class=\"col\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        onChange={() =>\r\n                                            this.setState({\r\n                                                value4: !this.state.value4,\r\n                                            })\r\n                                        }\r\n                                        style={{ marginRight: 5 }}\r\n                                    />\r\n                                    <text>\r\n                                        {this.state.value4 ? \"Hide\" : \"Show\"}\r\n                                        {this.state.support.split(\"/\")[3]}\r\n                                    </text>\r\n                                </div>\r\n                            ) : null}\r\n                            {this.state.support.split(\"/\")[4] ? (\r\n                                <div class=\"col\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        onChange={() =>\r\n                                            this.setState({\r\n                                                value5: !this.state.value5,\r\n                                            })\r\n                                        }\r\n                                        style={{ marginRight: 5 }}\r\n                                    />\r\n                                    <text>\r\n                                        {this.state.value5 ? \"Hide\" : \"Show\"}\r\n                                        {this.state.support.split(\"/\")[4]}\r\n                                    </text>\r\n                                </div>\r\n                            ) : null}{\" \"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Phylotree\r\n                    width={width}\r\n                    height={height}\r\n                    transform={`translate(${padding}, ${padding})`}\r\n                    labelStyler={this.labelStyler}\r\n                    newick={this.state.newick}\r\n                    alignTips={this.state.alignTips}\r\n                    sort={this.state.sort}\r\n                    reroot={this.state.reroot}\r\n                    collapsed={this.state.collapsed}\r\n                    showAttributes={this.state.attribute}\r\n                    showLabels={this.state.showlabel}\r\n                    showValue1={this.state.value1}\r\n                    showValue2={this.state.value2}\r\n                    showValue3={this.state.value3}\r\n                    showValue4={this.state.value4}\r\n                    showValue5={this.state.value5}\r\n                    round1={this.state.round.split(\",\")[0]}\r\n                    round2={this.state.round.split(\",\")[1]}\r\n                    round3={this.state.round.split(\",\")[2]}\r\n                    round4={this.state.round.split(\",\")[3]}\r\n                    round5={this.state.round.split(\",\")[4]}\r\n                    tooltip={TooltipContents}\r\n                    isOpen={this.openDropdown}\r\n                    includeBLAxis\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nPhylotreeApplication.defaultProps = {\r\n    padding: 100,\r\n    height: 600,\r\n    width: 600,\r\n    support: \"value 1/value 2/value 3/value 4/value 5\",\r\n    round: \"-1,-1,-1,-1,-1\",\r\n};\r\n\r\nexport default PhylotreeApplication;\r\n"]},"metadata":{},"sourceType":"module"}